from urllib import request
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import Select
import time
import cv2
import numpy as np
import subprocess
import re
from bs4 import BeautifulSoup as BS
import datetime
import threading
import random

lock = threading.Lock()
USER_AGENTS = [
    "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; AcooBrowser; .NET CLR 1.1.4322; .NET CLR 2.0.50727)",
    "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; Acoo Browser; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.0.04506)",
    "Mozilla/4.0 (compatible; MSIE 7.0; AOL 9.5; AOLBuild 4337.35; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)",
    "Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; en-US)",
    "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 2.0.50727; Media Center PC 6.0)",
    "Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 1.0.3705; .NET CLR 1.1.4322)",
    "Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 5.2; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.2; .NET CLR 3.0.04506.30)",
    "Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN) AppleWebKit/523.15 (KHTML, like Gecko, Safari/419.3) Arora/0.3 (Change: 287 c9dfb30)",
    "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.2pre) Gecko/20070215 K-Ninja/2.1.1",
    "Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.9) Gecko/20080705 Firefox/3.0 Kapiko/3.0",
    "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.20 (KHTML, like Gecko) Chrome/19.0.1036.7 Safari/535.20",
    "Opera/9.80 (Macintosh; Intel Mac OS X 10.6.8; U; fr) Presto/2.9.168 Version/11.52",
    "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/536.11 (KHTML, like Gecko) Chrome/20.0.1132.11 TaoBrowser/2.0 Safari/536.11",
    "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.71 Safari/537.1 LBBROWSER",
    "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; LBBROWSER)",
    "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E; LBBROWSER)",
    "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.84 Safari/535.11 LBBROWSER",
    "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)",
    "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; QQBrowser/7.0.3698.400)",
    "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E)",
    "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; SV1; QQDownload 732; .NET4.0C; .NET4.0E; 360SE)",
    "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; QQDownload 732; .NET4.0C; .NET4.0E)",
    "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E)",
    "Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1",
    "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.89 Safari/537.1",
    "Mozilla/5.0 (iPad; U; CPU OS 4_2_1 like Mac OS X; zh-cn) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8C148 Safari/6533.18.5",
    "Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:2.0b13pre) Gecko/20110307 Firefox/4.0b13pre",
    "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.64 Safari/537.11",
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.87 Safari/537.36",
    "User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko",
    "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:0.9.4) Gecko/20011128 Netscape6/6.2.1",
    "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.8.1.11) Gecko/20071127 Firefox/2.0.0.11Mac OS X ",
    "Mozilla/5.0 (Macintosh; U; Intel Mac OS X; en; rv:1.8.1.6) Gecko/20070809 Camino/1.5.1",
    "Mozilla/5.0 (Platform; Encryption; OS-or-CPU; Language) AppleWebKit/AppleWebKitVersion (KHTML, like Gecko) ",
    "Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en) AppleWebKit/124 (KHTML, like Gecko) Safari/125.1",
    "Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.13 (KHTML, like Gecko) Chrome/0.2.149.29 Safari/525.13",
    'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50', 'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50', 'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0;', 'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0)', 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)', ' Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)', ' Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv2.0.1) Gecko/20100101 Firefox/4.0.1', 'Mozilla/5.0 (Windows NT 6.1; rv2.0.1) Gecko/20100101 Firefox/4.0.1', 'Opera/9.80 (Macintosh; Intel Mac OS X 10.6.8; U; en) Presto/2.8.131 Version/11.11', 'Opera/9.80 (Windows NT 6.1; U; en) Presto/2.8.131 Version/11.11', ' Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_0) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11', ' Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Maxthon 2.0)', ' Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; TencentTraveler 4.0)', ' Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)', ' Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; The World)', ' Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; SE 2.X MetaSr 1.0; SE 2.X MetaSr 1.0; .NET CLR 2.0.50727; SE 2.X MetaSr 1.0)', ' Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; 360SE)', ' Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Avant Browser)', ' Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)', 'Mozilla/5.0 (iPhone; U; CPU iPhone OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5', 'Mozilla/5.0 (iPod; U; CPU iPhone OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5', 'Mozilla/5.0 (iPad; U; CPU OS 4_3_3 like Mac OS X; en-us) AppleWebKit/533.17.9 (KHTML, like Gecko) Version/5.0.2 Mobile/8J2 Safari/6533.18.5', ' Mozilla/5.0 (Linux; U; Android 2.3.7; en-us; Nexus One Build/FRF91) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1', ' MQQBrowser/26 Mozilla/5.0 (Linux; U; Android 2.3.7; zh-cn; MB200 Build/GRJ22; CyanogenMod-7) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1', ' Opera/9.80 (Android 2.3.4; Linux; Opera Mobi/build-1107180945; U; en-GB) Presto/2.8.149 Version/11.10', ' Mozilla/5.0 (Linux; U; Android 3.0; en-us; Xoom Build/HRI39) AppleWebKit/534.13 (KHTML, like Gecko) Version/4.0 Safari/534.13', ' Mozilla/5.0 (BlackBerry; U; BlackBerry 9800; en) AppleWebKit/534.1+ (KHTML, like Gecko) Version/6.0.0.337 Mobile Safari/534.1+', ' Mozilla/5.0 (hp-tablet; Linux; hpwOS/3.0.0; U; en-US) AppleWebKit/534.6 (KHTML, like Gecko) wOSBrowser/233.70 Safari/534.6 TouchPad/1.0', ' Mozilla/5.0 (SymbianOS/9.4; Series60/5.0 NokiaN97-1/20.0.019; Profile/MIDP-2.1 Configuration/CLDC-1.1) AppleWebKit/525 (KHTML, like Gecko) BrowserNG/7.1.18124', ' Mozilla/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident/5.0; IEMobile/9.0; HTC; Titan)', ' UCWEB7.0.2.37/28/999', ' NOKIA5700/ UCWEB7.0.2.37/28/999', ' Openwave/ UCWEB7.0.2.37/28/999', ': Mozilla/4.0 (compatible; MSIE 6.0; ) Opera/UCWEB7.0.2.37/28/999']


class Captcha(threading.Thread):
    def __init__(self, captchaUrl,url,beian,threadID, name, captfile='',datafile='',start_num=0,end_num=0):
        threading.Thread.__init__(self)
        self.threadID = threadID  #线程ID
        self.name = name   #线程名称，用于标识
        self.captfile = captfile  #验证码图片文件
        self.datafile = datafile+'.txt'  #验证码识别后生成的txt文件
        self.datafile2 = datafile
        self.captchaUrl = captchaUrl   #验证码生成页
        self.url = url     #备案号和验证码提交页
        self.beian = beian  #备案号名称初始化
        self.start_num = start_num   #起始备案号
        self.end_num = end_num      #终止备案号

    def run(self):
        print("Starting " + self.name)
        t1 = datetime.datetime.now()
        # ##爬取前先做身份验证码，带上cookie。
        self.driver = webdriver.Chrome('E:/Code/chromedriver_win32/chromedriver')
        self.driver.get(captchaUrl)

        for i in range(self.start_num,self.end_num+1):
            n = str(i).zfill(6)
            self.beian_full = "%s%d%s%s" % (self.beian, 16, n, '号')  #循环补全备案号，并开始查询
            print('开始查询：', self.beian_full)
            try:
                self.getSearch()
            except  Exception as e:
                print(datetime.datetime.now()-t1)
                print('error：',e)
            
        print("Exiting " + self.name)
        print(datetime.datetime.now()-t1)
        self.driver.quit()

    def getCaptcha(self):
        #每次识别验证码前，随机更换user-agent
        # chrome_options = webdriver.ChromeOptions()
        # user_agent = random.choice(USER_AGENTS)
        # chrome_options.add_argument('User-Agent=%s' % user_agent)
        # self.driver = webdriver.Chrome('E:/Code/chromedriver_win32/chromedriver')

        self.driver.get(self.captchaUrl)
        time.sleep(1)   #截频前需要等待网页完全加载……
        self.driver.save_screenshot(self.captfile)
        captchaValue = self.readCaptcha(self.captfile)
        print(captchaValue)
        if len(captchaValue) == 6:
            pattern = re.compile(r'[0-9a-zA-Z]{6}')
            match = pattern.match(captchaValue)
            if match:

                print('验证码格式终于正确啦')
                return captchaValue
            else:
                # self.driver.quit()
                print('验证码错误，请重新识别')
                return self.getCaptcha()
        else:
            # self.driver.quit()
            print('验证码格式错误，请重新识别')
            return self.getCaptcha()

    def readCaptcha(self,file):
        img = cv2.imread(file)
        cv2.namedWindow('Image', cv2.WINDOW_NORMAL)
        blur = cv2.blur(img, (4, 4))
        gray = cv2.cvtColor(blur, cv2.COLOR_BGR2GRAY)  # 灰度化
        ret, thresh = cv2.threshold(gray, 127, 255, 0)  # 二值化
        kernel = np.ones((4, 4), np.uint8)
        erosion = cv2.morphologyEx(thresh, cv2.MORPH_OPEN, kernel)
        gaosi = cv2.GaussianBlur(erosion, (3, 3), 0)
        ret, th2 = cv2.threshold(gaosi, 127, 255, 0)
        cv2.imwrite(self.captfile, th2)
        p = subprocess.Popen(
            ["E:/Code/Tesseract-OCR/tesseract.exe",self.captfile, self.datafile2, '-l', 'normal'],
            stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        time.sleep(1)                         #文件生成需要隔片刻才能读取到。
        f = open(self.datafile, "r")
        # Clean any whitespace characters
        captchaValue = f.read().replace(" ", "").replace("\n", "")
        return captchaValue

    def getSearch(self):

        captchaValue = self.getCaptcha()
        self.driver.get(self.url)
        try:
            element = WebDriverWait(self.driver, 10).until(
                EC.presence_of_element_located((By.ID, "button1"))
            )
            # 公司名称
            inputs = self.driver.find_elements_by_tag_name('input')
            for input in inputs:
                if input.get_attribute('id') == 'z3':
                    input.click()
            # time.sleep(1)  # 测试完毕，可去掉。
            elem2 = self.driver.find_element_by_id('z3')
            elem2.send_keys(self.beian_full)
            # time.sleep(1)
            # 填写验证码
            text = captchaValue
            print('验证码为：' + text)
            elem1 = self.driver.find_element_by_id('textfield7')
            elem1.send_keys(text)

            # 提交表单
            elem3 = self.driver.find_element_by_id('button1')
            elem3.send_keys(Keys.RETURN)
            page = self.driver.page_source

            soup = BS(page,'lxml')
            if soup.select('.by')[0].string == '详细信息':  #查询成功！
                if soup.select('#1') == []:
                    print('查询成功！没有符合条件的记录')
                    # print(soup)
                else:
                    print('查询成功！入库成功')
                    lock.acquire()
                    try:
                        f = open('ICP备案data/16上海备案数据.txt', 'r+')  #E:\Documents\python\ICP备案data
                        f.read()
                        html = soup.select('#1')
                        a = BS(str(html[0]), 'lxml')
                        data = []
                        for string in a.stripped_strings:
                            data.append(repr(string))
                        f.write('\n' + str(data))
                        f.close()
                    finally:
                        lock.release()

            else:
                # self.driver.quit()
                return self.getSearch()
        except  Exception as e:
            print('error:',e)
        finally:
            print('')
            # self.driver.quit()

# City = ['京','沪','浙','苏', '津','冀', '晋', '蒙', '辽', '吉', '黑', '皖', '闽', '赣', '鲁', '豫', '鄂',
#             '湘', '粤','桂', '琼', '渝', '蜀', '黔', '滇', '陇', '藏', '陕', '青', '宁', '新']
beian = '沪ICP备'
captchaUrl = 'http://bcainfo.miitbeian.gov.cn/getVerifyCode'
url = 'http://bcainfo.miitbeian.gov.cn/icp/publish/query/icpMemoInfo_showPage.action'
list = []
for i in range(1,11):
    list.append(i)
adict = locals()


for i,s in enumerate(list):
    adict['thread%s' % (i+1)] = Captcha(captchaUrl, url, beian, s, "Thread-"+str(s), 'captcha'+str(s)+'.jpg', 'captcha'+str(s), 0+(s-1)*1000+1, 0+s*1000)
    adict['thread%s' % (i + 1)].start()
print("Exiting Main Thread")
